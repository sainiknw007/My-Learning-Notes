Cluster is a group of nodes grouped together. This way even if one node falls you have your application still accessible 
from the other nodes.
Multiple nodes share load as well.

Now we have a Cluster now. 

Who is responsible for managing cluster ?
Where is the information about members of the cluster stored ?
How are the nodes monitored ?
When a node fails how do you move the workload of the field node to another  worker node ?
That's is the Master ?

Master is the another node with Kubernetes installed in it, and is configured as a Master.

The master watches over the nodes in the cluster and 
is responsible for the actual orchestration of containers on the worker nodes.

when you install Kubernetes on a System: You need to install following components:

1).	API Server
2).	etcd service
3).	a kubelet service
4).	a container runtime
5).	Controller and
6). 	Scheduler

1). API Server: API Server acts as the front end for Kubernetes.
                The user management devices, command line interface, 
		all talk to the API Server to interact with Kubernetes Cluster.

2). etcd key store: it is distributed reliable key value store used by Kubernetes to store all data used to manage cluster.
                    When you have multiple nodes and master in your cluster, etcd stores all that information on all the nodes in the cluster
		    in distribute manner,

    		    etcd is responsible for implementing locks within the cluster,  to ensure that there are no conflicts between the master.

3). Schedule:	    The schedule is responsible for distributing work or containers across multiple nodes.
                    it looks for newly created container and assigns them to node.

4). Controller:    Controller are the brain behind  orchestrations.
                   They are responsible for noticing and responding:
                   when nodes, containers or endpoints goes down.
		   The controller makes decision to bring up new containers in such cases.

5).Container Runtime: Container Runtime is the underlying software that is used to run container.
                      Docker is Container runtime.

6). Kubelet:   	    kubelet is the agent that runs on each node in the cluster.
                    The agent is responsible for making sure that the containers are running on the nodes as expected.

There are two types of Server

Master Server and 
Node
and a set of components that make up Kubernetes.

How does the one Server become Master 
And other become Slave.

Wokerker Nodes: Containers are hosted on worker node.
                Containers are hosted on Docker container, to run the docker container on a system, need docker container runtime installed and
		

Other containers runtime are
Docker
Rocket
cryo

Master Server Components:
 

Kube-API Servers make it a Master or controlplane
Master server has 
control manager and 
scheduler.
etcd

Worker Node Components that make it a Worker Node:

Worker node has kubelet agent, 
that is responsible for interacting with a master to provide health information for worker node.
and carry out actions requested by the Master on the worker node.

All the information gathered are stored in the key value store on the master.

Container runtime.

Kubectl or kube control is a command line tool used :

	to deploy and manage applications on Kubernetes cluster.
	to get status of nodes in the cluster.
  	and many other informations.

kubectl run 	            ----------> command is used to deploy an application in the cluster.

kubectl cluster-info	    ----------> command is used to view information about the cluster 

kubectl get nodes           ---------> command is used to list all the nodes part of the cluster.


           





